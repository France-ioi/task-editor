{
  "title": "Task",
  "type": "object",
  "description": "This editor allows you to edit the various aspects of a task. All the data in this editor is organized as a JSON object, whose properties represent each task part. Some properties are optional, and are hidden by default in the editor; to display them, click \"Object properties\" on each tree item to add these optional properties.",
  "definitions": {
    "fileDescr": {
      "type": "string",
      "format": "url",
      "options": {
        "upload": true
      }
    },
    "compilationDescr": {
      "type": "object",
      "description": "Description of the files required to compile a program.",
      "properties": {
        "language": {
          "type": "string",
          "description": "Language of the program. Possible values: 'c', 'cpp', 'cpp11', 'ml', 'ocaml', 'java', 'javascool', 'js', 'sh', 'shell', 'pascal', 'php'', 'py', 'py2', 'py3', 'python', 'python2', 'python3'."
        },
        "files": {
          "type": "array",
          "description": "List of source files.",
          "items": {
            "$ref": "#/definitions/fileDescr"
          }
        },
        "dependencies": {
          "type": "array",
          "description": "List of dependencies.",
          "items": {
            "$ref": "#/definitions/fileDescr"
          }
        }
      },
      "required": [
        "language",
        "files",
        "dependencies"
      ]
    },
    "executionParams": {
      "type": "object",
      "description": "Parameters of an execution.",
      "properties": {
        "timeLimitMs": {
          "type": "integer",
          "description": "Time limit in milliseconds."
        },
        "memoryLimitKb": {
          "type": "integer",
          "description": "Memory limit in kilobytes."
        },
        "useCache": {
          "type": "boolean",
          "description": "Use taskgrader's cached items."
        },
        "executionArgs": {
          "type": "string",
          "description": "Command-line arguments for the execution of the program."
        },
        "forceStatic": {
          "type": "boolean",
          "description": "If present, force static or non-static compilation."
        },
        "continueOnError": {
          "type": "boolean",
          "description": "Consider errors as non-fatal."
        },
        "stdoutTruncateKb": {
          "type": "integer",
          "description": "Size in kilobytes to capture from stdout, -1 means no limit."
        },
        "stderrTruncateKb": {
          "type": "integer",
          "description": "Size in kilobytes to capture from stderr, -1 means no limit."
        },
        "addFiles": {
          "type": "array",
          "description": "Files to add to the execution folder.",
          "items": {
            "$ref": "#/definitions/fileDescr"
          }
        },
        "getFiles": {
          "type": "array",
          "description": "Files to capture in the report.",
          "items": {
            "$ref": "#/definitions/filename"
          }
        }
      },
      "required": [
        "timeLimitMs",
        "memoryLimitKb",
        "useCache",
        "stdoutTruncateKb",
        "stderrTruncateKb",
        "getFiles"
      ]
    },
    "compileAndRunParams": {
      "type": "object",
      "description": "Parameters for a compilation and an execution.",
      "properties": {
        "compilationDescr": {
          "$ref": "#/definitions/compilationDescr"
        },
        "compilationExecution": {
          "$ref": "#/definitions/executionParams"
        },
        "runExecution": {
          "$ref": "#/definitions/executionParams"
        }
      },
      "required": [
        "compilationDescr",
        "compilationExecution",
        "runExecution"
      ]
    },
    "filename": {
      "type": "string",
      "description": "A valid file name.",
      "pattern": "^\\w[\\w.~/-]+$"
    }
  },
  "properties": {
    "title": {
      "type": "string",
      "description": "Title of the window.",
      "title": "Title"
    },
    "windowLanguage": {
      "type": "string",
      "description": "Language for the window.",
      "enum": [
        "fr",
        "en",
        "de"
      ]
    },
    "AlgoreaTrainingTaskMetaData": {
      "type": "object",
      "description": "Meta-data specific to taskplatform tasks.",
      "properties": {
        "LanguageModules": {
          "type": "string",
          "title": "Language",
          "enum": [
            "blockly",
            "python"
          ]
        }
      },
      "required": [
        "LanguageModules"
      ]
    },
    "PEMTaskMetaData": {
      "type": "object",
      "description": "Task meta-data.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the task; we generally use the path in the SVN.",
          "title": "id"
        },
        "license": {
          "type": "string",
          "enum": [
            "CC-BY-SA",
            "CC-BY-NC"
          ]
        },
        "authors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "language": {
          "type": "string",
          "description": "Language for the task. If you want to have this task in multiple languages, copy the \"index.html\" file generated by this editor to another file \"index_en.html\" (for instance), and edit it manually.",
          "enum": [
            "fr",
            "en",
            "de"
          ]
        },
        "version": {
          "type": "string",
          "title": "version"
        },
        "baseUrl": {
          "type": "string",
          "title": "baseUrl"
        }
      },
      "required": [
        "id",
        "authors",
        "language"
      ]
    },

    "task": {
      "type": "object",
      "description": "Task statement",
      "properties": {
        "title": {
          "type": "string",
          "description": "Title of the task.",
          "title": "Title"
        },
        "taskIntro": {
          "title": "Task statement",
          "description": "Task statement, displayed to the user.",
          "type": "string",
          "format": "html",
          "options": {
            "wysiwyg": true
          }
        }
      },
      "required": [
        "title",
        "taskIntro"
      ]
    },
    "context": {
      "type": "string",
      "enum": [
        "none",
        "arrows",
        "cards",
        "gems",
        "chticode_abs",
        "chticode_rel",
        "cones",
        "course",
        "dominoes",
        "marbles",
        "objects_in_space",
        "paint",
        "rocket",
        "sokoban",
        "new"
      ]
    },
    "conceptViewer": {
      "type": "boolean",
      "format": "checkbox",
      "title": "conceptViewer"
    },
    "groupByCategory": {
      "type": "boolean",
      "format": "checkbox",
      "title": "groupByCategory"
    },
    "generatedBlocks": {
      "type": "array",
      "uniqueItems": true,
      "format": "select",
      "description": " La gestion des instructions pour le robot",
      "items": {
        "type": "string",
        "title": "generatedBlocks",
        "enum": [
          "row",
          "col",
          "north",
          "south",
          "east",
          "west",
          "left",
          "right",
          "turnAround",
          "forward",
          "backwards",
          "jump",
          "obstacleInFront",
          "obstacleEast",
          "obstacleWest",
          "obstacleNorth",
          "obstacleSouth",
          "obstacleRight",
          "obstacleLeft",
          "gridEdgeEast",
          "gridEdgeWest",
          "gridEdgeNorth",
          "gridEdgeSouth",
          "platformInFront",
          "platformAbove",
          "withdrawObject",
          "dropObject",
          "onObject",
          "onContainer",
          "onNumber",
          "onWritable",
          "writeNumber",
          "readNumber",
          "pushObject",
          "pushableInFront",
          "dropInFront",
          "dropAbove",
          "shoot_noShadow",
          "shoot",
          "shootCondition_noShadow",
          "shootCondition"
        ]
      }
    },
    "standardBlocks": {
          "type": "object",
          "description": " La gestion des blocs pour l algorithme",
          "properties": {
            "includeAll": {
              "type": "boolean",
              "format": "checkbox",
              "title": "includeAll"
            },
            "wholeCategories": {
              "type": "array",
              "uniqueItems": true,
              "format": "select",
              "description": "Bloc pour le robot.",
              "items": {
                "type": "string",
                "title": "generatedBlocks",
                "enum": [
                  "row",
                  "col",
                  "north",
                  "south",
                  "east",
                  "west",
                  "left",
                  "right",
                  "turnAround",
                  "forward",
                  "backwards",
                  "jump",
                  "obstacleInFront",
                  "obstacleEast",
                  "obstacleWest",
                  "obstacleNorth",
                  "obstacleSouth",
                  "obstacleRight",
                  "obstacleLeft",
                  "gridEdgeEast",
                  "gridEdgeWest",
                  "gridEdgeNorth",
                  "gridEdgeSouth",
                  "platformInFront",
                  "platformAbove",
                  "withdrawObject",
                  "dropObject",
                  "onObject",
                  "onContainer",
                  "onNumber",
                  "onWritable",
                  "writeNumber",
                  "readNumber",
                  "pushObject",
                  "pushableInFront",
                  "dropInFront",
                  "dropAbove",
                  "shoot_noShadow",
                  "shoot",
                  "shootCondition_noShadow",
                  "shootCondition"
                ]
              }
            },
            "singleBlocks": {
              "type": "array",
              "uniqueItems": true,
              "format": "select",
              "description": "La gestion des blocs pour l'algorithme.",
              "items": {
                "type": "string",
                "title": "singleBlocks",
                "enum": [
                  "controls_if",
                  "ccontrols_if_else",
                  "controls_repeat",
                  "controls_repeat_ext",
                  "controls_whileUntil",
                  "controls_untilWhile",
                  "logic_negate",
                  "logic_boolean",
                  "logic_compare",
                  "logic_operation",
                  "text_join",
                  "math_arithmetic",
                  "math_number"
                ]
              }
            }
          },
          "required": [
            "includeAll",
            "wholeCategories",
            "singleBlocks"
          ]
        },

    "difficulties": {
      "type": "array",
      "format": "tabs",
      "title": "difficulties",
      "minItems": 1,
      "maxItems": 3,
      "items": {
        "type": "object",
        "title": "level",
        "headerTemplate": "level {{ i1 }}",
        "properties": {
          "name": {
            "type": "string"
          },
          "scene": {
            "type": "grid",
            "watch": {
              "sceneContext": "root.context"
            }
          },
          "gridInfo": {
            "type": "object",
            "description": "Meta-data specific to subTask.gridInfos..",
            "properties": {
              "showLabels": {
                "type": "boolean",
                "format": "checkbox",
                "title": "showLabels"
              },
              "bagInit": {
                "type": "object",
                "description": " nombre d item ",
                "properties": {
                  "count": {
                    "type": "integer",
                    "description": "Nombre ."
                  },
                  "type": {
                    "type": "string",
                    "title": "type"
                  }
                },
                "required": [
                  "count",
                  "type"
                ]
              },
              "maxInstructions": {
                "type": "integer",
                "title": "maxInstructions"
              },
              "languageStrings": {
                "type": "object",
                "description": " personnalisation du texte ",
                "properties": {
                  "blocklyRobot_lib": {
                    "type": "object",
                    "description": " personalisation dans la bibli blocklyRobot ",
                    "properties": {
                      "label": {
                        "type": "array",
                        "description": "tableau de textes.",
                        "items": {
                          "type": "string",
                          "title": "label"
                        }
                      },
                      "message": {
                        "type": "object",
                        "description": " personalisation des message lors de l'execution du programme ",
                        "properties": {
                          "successReachExit": {
                            "type": "string",
                            "description": "en cas de succes.",
                            "successReachExit": ""
                          },
                          "failureReachExit": {
                            "type": "string",
                            "description": "en cas d echec.",
                            "failureReachExit": ""
                          }
                        },
                        "required": [
                          "successReachExit",
                          "failureReachExit"
                        ]
                      }
                    },
                    "required": [
                      "label",
                      "message"
                    ]
                  }
                },
                "required": [
                  "blocklyRobot_lib"
                ]
              },

              "additionalBlocksByLevel": {
                "type": "object",
                "description": " La gestion des blocs ",
                "properties": {
                  "generatedBlocks": {
                    "type": "object",
                    "description": " La gestion des instruction pour le robot",
                    "properties": {
                      "robot": {
                        "type": "array",
                        "description": " La gestion des instruction selon le niveau ",
                        "items": {
                          "type": "string",
                          "title": "generatedBlocks",
                          "enum": [
                            "row",
                            "col",
                            "north",
                            "south",
                            "east",
                            "west",
                            "left",
                            "right",
                            "turnAround",
                            "forward",
                            "backwards",
                            "jump",
                            "obstacleInFront",
                            "obstacleEast",
                            "obstacleWest",
                            "obstacleNorth",
                            "obstacleSouth",
                            "obstacleRight",
                            "obstacleLeft",
                            "gridEdgeEast",
                            "gridEdgeWest",
                            "gridEdgeNorth",
                            "gridEdgeSouth",
                            "platformInFront",
                            "platformAbove",
                            "withdrawObject",
                            "dropObject",
                            "onObject",
                            "onContainer",
                            "onNumber",
                            "onWritable",
                            "writeNumber",
                            "readNumber",
                            "pushObject",
                            "pushableInFront",
                            "dropInFront",
                            "dropAbove",
                            "shoot_noShadow",
                            "shoot",
                            "shootCondition_noShadow",
                            "shootCondition"
                          ]
                        }
                      }
                    },
                    "required": [
                      "robot"
                    ]
                  },
                  "standardBlocks": {
                    "type": "object",
                    "description": " La gestion des blocs pour l algorithme",
                    "properties": {
                      "includeAll": {
                        "type": "boolean",
                        "format": "checkbox",
                        "title": "includeAll"
                      },
                      "wholeCategories": {
                        "type": "array",
                        "description": "Bloc pour le robot.",
                        "items": {
                          "type": "string",
                          "title": "generatedBlocks",
                          "enum": [
                            "row",
                            "col",
                            "north",
                            "south",
                            "east",
                            "west",
                            "left",
                            "right",
                            "turnAround",
                            "forward",
                            "backwards",
                            "jump",
                            "obstacleInFront",
                            "obstacleEast",
                            "obstacleWest",
                            "obstacleNorth",
                            "obstacleSouth",
                            "obstacleRight",
                            "obstacleLeft",
                            "gridEdgeEast",
                            "gridEdgeWest",
                            "gridEdgeNorth",
                            "gridEdgeSouth",
                            "platformInFront",
                            "platformAbove",
                            "withdrawObject",
                            "dropObject",
                            "onObject",
                            "onContainer",
                            "onNumber",
                            "onWritable",
                            "writeNumber",
                            "readNumber",
                            "pushObject",
                            "pushableInFront",
                            "dropInFront",
                            "dropAbove",
                            "shoot_noShadow",
                            "shoot",
                            "shootCondition_noShadow",
                            "shootCondition"
                          ]
                        }
                      },
                      "singleBlocks": {
                        "type": "array",
                        "description": "La gestion des blocs pour l'algorithme.",
                        "items": {
                          "type": "string",
                          "title": "singleBlocks",
                          "enum": [
                            "controls_if",
                            "ccontrols_if_else",
                            "controls_repeat",
                            "controls_repeat_ext",
                            "controls_whileUntil",
                            "controls_untilWhile",
                            "logic_negate",
                            "logic_boolean",
                            "logic_compare",
                            "logic_operation",
                            "text_join",
                            "math_arithmetic",
                            "math_number"
                          ]
                        }
                      }
                    },
                    "required": [
                      "includeAll",
                      "wholeCategories",
                      "singleBlocks"
                    ]
                  }
                },
                "required": [
                  "generatedBlocks",
                  "standardBlocks"
                ]
              },
              "checkEndCondition": {
                "type": "string",
                "description": "methode de verification de la solution.",
                "enum": [
                  "checkReachExit",
                  "checkPickedAllWithdrawables",
                  "checkContainersFilled",
                  "checkBothReachAndCollect"
                ]
              },
              "actionDelay": {
                "type": "integer",
                "description": "Nombre "
              },
              "checkEndEveryTurn": {
                "type": "boolean",
                "format": "checkbox",
                "title": "checkEndEveryTurn"
              },
              "ignoreInvalidMoves": {
                "type": "boolean",
                "format": "checkbox",
                "title": "cignoreInvalidMoves"
              },
              "maxIterWithoutAction": {
                "type": "integer",
                "description": "Nombre "
              },
              "hideSaveOrLoad": {
                "type": "boolean",
                "format": "checkbox",
                "title": "hideSaveOrLoad"
              },
              "variables": {
                "type": "array",
                "description": "Context used by the task.",
                "items": {
                  "type": "string",
                  "title": "variables"
                }
              }
            },
            "required": [
              "maxInstructions"

            ]
          },
          "displayHelperThreshold": {
            "type": "integer",
            "title": "threshold",
            "description": "Threshold of the displayHelper for the current difficulty"
          }
        },
        "required": ["scene", "gridInfo","displayHelperThreshold"]
      }
    }
  },
  "required": [
    "title",
    "windowLanguage",
    "conceptViewer",
    "groupByCategory",
    "generatedBlocks",
    "standardBlocks",
    "AlgoreaTrainingTaskMetaData",
    "PEMTaskMetaData",
    "task",
    "context",
    "difficulties"
  ]
}
